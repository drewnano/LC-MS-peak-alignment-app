apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: <name-of-your-template>
  title: Name of your template
  description: Description
  tags:
    - starterkit
    - module or template # CHOOSE ONE
spec:
  owner: merck-gen/github-starterkit
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    # you will most probably not need to modify this, each of these is useful
    - title: Basic info
      required:
        - name
        - desc
        - prjOwner
        - ci
      properties:
        name:
          title: Project Name
          type: string
          description: Name of the project
          ui:autofocus: true
          ui:options:
            rows: 5
        desc:
          title: Project Description
          type: string
          description: Description of the project
          ui:options:
            rows: 5
        prjOwner:
          title: Project Owner
          type: string
          description: GitHub team as the project owner
          default: group:merck-gen/github-trainkit
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [User, Group]
            rows: 5
        ci:
          title: Configuration Item (CI)
          type: string
          description: CI for your project (ISID in case of personal project)
          ui:options:
            rows: 5
    - title: Template-specific info # you can change title to fit your template
      required:
        - param1
        - param2
      properties:
        # Copy the following for each parameter you need
        param1:
          # MANDATORY
          title: Param 1
          type: string
          description: Param 1 desc
          # OPTIONAL
          default: 'default value'

    # This creates a new repo in github, you will most probably not modify this
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          description: Leave the owner as merck-gen or merck-test, and please follow the GitHub naming conventions for the repo name (PROJECT-TEAM-REPO)
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - merck-gen
              - merck-trainings


  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    # ---------------IF TEMPLATE-----------------------#
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./root
        values:
          name: ${{ parameters.name }}
          desc: ${{ parameters.desc }}
          prjOwner: ${{ parameters.prjOwner.split(":")[1].split("/")[0] }}
          prjAuthor: ${{ parameters.prjOwner.split(":")[1].split("/")[1] }}
          ci: ${{ parameters.ci }}

          # Add parameters that you want to pass to the skeleton here
          param1: ${{ parameters.param1 }}

    - id: fetch-<OTHER>-template
      name: Fetch OTHER template
      action: fetch:template
      if: ${{ parameters.someParameter == true }}
      input:
        url: https://github.com/merck-gen/<your-other-template-repo>/tree/main/skeleton
        targetPath: ./template
        values:
          name: ${{ parameters.name }}
          desc: ${{ parameters.desc }}
          prjOwner: ${{ parameters.prjOwner.split(":")[1].split("/")[0] }}
          prjAuthor: ${{ parameters.prjOwner.split(":")[1].split("/")[1] }}
          ci: ${{ parameters.ci }}

          # Add parameters that you want to pass to the skeleton here
          param1: ${{ parameters.param1 }}

    - id: merge-<OTHEER>-template
      name: Scaraplate
      action: msd.apply:starter:kit:scaraplate
      if: ${{ parameters.someParameter == true }}
      input:
        targetPath: ./root
        templatePath: ./template

    - id: delete-scaraplate
      name: Delete file
      action: fs:delete
      input:
        files: 
          - ./root/scaraplate.yaml
    
    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      if: ${{ parameters.prjOwner.split(":")[0] != 'user' }}
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        sourcePath: ./root
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: internal
        defaultBranch: develop
        access: ${{ parameters.prjOwner.split(":")[1] }}

    - id: publishPrivate
      if: ${{ parameters.prjOwner.split(":")[0] == 'user' }}
      name: Publish private
      action: publish:github
      input:
        allowedHosts: ['github.com']
        sourcePath: ./root
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: internal
        defaultBranch: develop
        access: merck-gen/github-trainkit 
        collaborators: 
          - access: admin
            user: ${{ parameters.prjOwner.split(":")[1] }}

    # ---------------IF MODULE-----------------------#
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./template
        values:
          name: ${{ parameters.name }}
          desc: ${{ parameters.desc }}
          prjOwner: ${{ parameters.prjOwner.split(":")[1].split("/")[0] }}
          prjAuthor: ${{ parameters.prjOwner.split(":")[1].split("/")[1] }}
          ci: ${{ parameters.ci }}
          
          # Repo name that was provided
          repoUrl: ${{ parameters.repoUrl.split("repo=")[1] }}

          # Add parameters that you want to pass to the skeleton here
          param1: ${{ parameters.param1 }}
    # Fetch the original repo and merge it with the template
    - id: fetch-repo
      name: Fetch Repo
      action: fetch:plain
      input:
        url: https://github.com/${{ parameters.repoUrl.split("=")[1].split("&")[0] }}/${{ parameters.repoUrl.split("=")[2] }}/tree
        targetPath: ./root
    
    - id: merge-template
      name: Scaraplate
      action: msd.apply:starter:kit:scaraplate
      input:
        targetPath: ./root
        templatePath: ./template

    - id: delete-scaraplate
      name: Delete file
      action: fs:delete
      input:
        files: 
          - ./root/scaraplate.yaml
    # Publish to the existing repo as a pull request
    - id: publishExisting
      name: Publish as pull request
      action: publish:github:pull-request
      input:
        allowedHosts: ['github.com']
        sourcePath: ./root
        description: Used Starterkit '<Template title>' for adding functionality
        repoUrl: ${{ parameters.repoUrl }}
        branchName: <Template name>
        title: Adding Starterkit template - <Template title>


  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
        icon: 'folder_data'
      - title: Repository
        url: ${{ steps.publishPrivate.output.remoteUrl }}
        icon: 'folder_data'
      - title: Next Steps
        url: <provide your documentation link here>
        icon: 'description'